plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}


loom {
//    splitEnvironmentSourceSets()

    mods {
        "quipt" {
            sourceSet sourceSets.main
//            sourceSet sourceSets.client
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()

}

configurations {
    shadowInclude // Custom configuration for dependencies to include
}

shadowJar {
    configurations = [project.configurations.shadowInclude]

    // Exclude unnecessary files to reduce size
//    minimize()
    exclude 'META-INF/maven/**'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    // Set classifier to empty to replace default JAR
    archiveClassifier.set('all')
//    mergeServiceFiles()
}

jar {
    enabled = false
}

remapJar {
    dependsOn shadowJar
    input.set shadowJar.archiveFile
    archiveClassifier.set('')
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'


    shadow project(":core")
    shadowInclude project(":core")
//    implementation project(":core")

    shadow project(":common")
    shadowInclude project(":common")
//    implementation project(":common")
}

test {
    useJUnitPlatform()
}


processResources {
    inputs.property "version", project_version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", loader_version
    inputs.property "supported_minecraft_versions", supported_minecraft_versions
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project_version,
                "minecraft_version": minecraft_version,
                "loader_version": loader_version,
                "supported_minecraft_versions": supported_minecraft_versions
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 21 // or 17

    // Force Java version for all modules
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}